% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/server-schedule_predefined.R
\name{schedule_predefined}
\alias{schedule_predefined}
\alias{schedule_weekdays}
\alias{schedule_42}
\alias{schedule_5623}
\title{Quickly Create Pre-Defined Work Schedules}
\usage{
schedule_predefined(
  schedule = c("weekdays", "42", "5623", "custom"),
  start = Sys.Date(),
  end = start + 29L,
  anchor = start,
  cycle = NULL
)

schedule_weekdays(start = Sys.Date(), end = start + 29L, anchor = start)

schedule_42(start = Sys.Date(), end = Sys.Date() + 29L, anchor = start)

schedule_5623(start = Sys.Date(), end = Sys.Date() + 29L, anchor = start)
}
\arguments{
\item{schedule}{A string indicating the schedule to use. For custom
schedules, use `schedule = "custom"`.}

\item{start}{The start date of the returned schedule; either a string in
"YYYY-MM-DD" format or a `Date` object}

\item{end}{The end date of the returned schedule; either a string in
"YYYY-MM-DD" format or a `Date` object}

\item{anchor}{The date from which to start ("anchor") schedule calculations.
This can be any valid date; no particular relationship to `start` or `end`
is needed. It must be either a string in "YYYY-MM-DD" format or a
`Date` object.}

\item{cycle}{A logical vector defining one scheduling cycle. If named, names
are passed to \code{\link[schedules:parse_weekday]{parse_weekday()}} for
standardization of weekday names.}
}
\value{
A `tibble` with columns `date` (a `Date` column containing dates
  between `start` and `end`, inclusive), `weekday` (a `character` column
  containing full weekday names), and `scheduled` (a `logical` column
  defining whether a day is schedule ("on") or not ("off"))
}
\description{
These functions create work schedules for weekday, 4-2, and
(5-2)-(5-3)-(6-2)x4-(6-3) schedules between the given `start` and `end`
dates. Rotating schedules (the latter two) require specification of a
starting ("anchor") point for the scheduling calculation; this is supplied
using the `anchor` argument, which is set end `start` by default. Weekly
schedules do not require an anchor point.

`schedule_weekdays()` defines a Monday-Friday work schedule.

`schedule_42()` defines a rotating 4 on, 2 off work schedule.

`schedule_5623()` defines a rotating schedule with the following pattern:
\itemize{
  \item 5 on, 2 off
  \item 5 on, 3 off
  \item 6 on, 2 off
  \item 6 on, 2 off
  \item 6 on, 2 off
  \item 6 on, 2 off
  \item 6 on, 3 off
}
}
\details{
These functions depend on the more general
\code{\link[schedules:schedule]{schedule()}} function, which takes
an arbitrary weekly or rotating schedule and (if needed) an anchor point. See
that function for implementing other schedules.
}
\seealso{
Other Case Assignment: 
\code{\link{schedule}()},
\code{\link{std_names}()}
}
\concept{Case Assignment}
